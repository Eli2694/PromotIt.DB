--טבלת קמפיינים
create  table Campaigns(CampaignsID int primary key identity,
UserID int foreign key references Users(UserID),
AssociationID int foreign key references Associations(AssociationID),
CampaginName varchar(100),CampaginHashtag nvarchar(20),CampaginWebsite VARCHAR(512))

--2 יצירת פונקציה שתכניס קמפיין לטבלה 
create procedure InsertCampagin @CampaginName varchar(100),@CampaginHashtag nvarchar(20),
@CampaginWebsite VARCHAR(512),
@FullName varchar(50),@Email nvarchar(255)
as
begin
--הגדרת משתנים
declare @Answer varchar(100),@UserID int,@AssociationID int
select @UserID = (select UserID from Users where FullName = @FullName and Email = @Email)
if @UserID is null
begin
 select @Answer ='המשתמש לא נמצא במערכת'
end
else
begin 
 select @AssociationID = (select AssociationID from Associations where UserID = @UserID)
 if @AssociationID is null
 begin
   select @Answer ='המשתמש לא הכניס עמותה'
 end
 else
 begin
  insert into Campaigns values(@UserID,@AssociationID,@CampaginName,@CampaginHashtag,@CampaginWebsite)
   select @Answer = 'הקמפיין נרשם במערכת'
 end
 end
 select @Answer
 end

 --3 יצירת פונקציה שתביא נתונים של כל הקמפיינים שהמשתמש יצר 
 create procedure GetPersonalCampaignList @Email nvarchar(255)
 as
 begin
 declare @Answer varchar(100),@UserID int
  select @UserID = (select UserID from Users where Email = @Email)
  select CampaginName,CampaginWebsite,CampaginHashtag,CampaignsID from Campaigns 
  where UserID = @UserID
 end

 --exec GetPersonalCampaignList 'gilgureli@gmail.com'
 --select * from Campaigns
 
 
--4 יצירת פונקציה לעדכון קמפיין
create procedure UpdatePersonalCampaign @CampaginName varchar(100),@CampaginHashtag nvarchar(20),
@CampaginWebsite VARCHAR(512),@CampaignsID int
as
begin
declare @answer varchar(50)
if exists(select UserID from Campaigns where CampaignsID = @CampaignsID)
begin
  update Campaigns
  set CampaginName = @CampaginName,CampaginHashtag = @CampaginHashtag,CampaginWebsite = @CampaginWebsite
  where CampaignsID = @CampaignsID
  select @answer = 'קמפיין עודכן בהצלחה'
end
else
begin
 select @answer = 'קמפיין לא עודכן בהצלחה'
end
 select @answer
end
 
 -- exec UpdatePersonalCampaign 

--1 יצירת טבלה של מוצרים
create table Products(ProductID int primary key identity,
CampaignID int foreign key references Campaigns(CampaignsID),
ProductName varchar(100),UnitPrice money,UnitsInStock int,RepresantativeID int)

-- שינוי טבלה, הוספת עמודה
ALTER TABLE Products
ADD UserID int foreign key references Users(UserID);

ALTER TABLE Products
DROP COLUMN UserID;


--2פומקציה להכנסת מוצר
alter procedure DonateProduct @ProductName varchar(100),@UnitPrice money,@UnitsInStock int,
@CampaignsID int,@Email nvarchar(255)
 as
 begin
 declare @Answer varchar(100),@UserID int
  if exists(select CampaignsID from Campaigns where CampaignsID = @CampaignsID)
  begin 
   select @Answer ='המוצר נכנס לקמפיין'
   select @UserID=(select UserID from Users where Email=@Email)
   insert into Products values(@CampaignsID,@ProductName, @UnitPrice,@UnitsInStock,@UserID)
  end
  else
  begin
   select @Answer = 'הקמפיין לא נמצא '
  end
  select @Answer
 end

 -- exec DonateProduct
 select ProductID from Products where CampaignID = 2 and ProductName = 'PrinStory Womens Pajamas'
 select * from Products

--update product
create procedure UpdataProduct @ProductName varchar(100),@UnitPrice money,@UnitsInStock int,
@ProductID int
as
begin
 declare @Answer varchar(100)
  if exists(select ProductID from Products where ProductID = @ProductID)
  begin
    update Products
	set ProductName = @ProductName, UnitPrice = @UnitPrice, UnitsInStock = @UnitsInStock
	where ProductID = @ProductID
	select @Answer = 'המוצר נמצא '
  end
  else
  begin
  select @Answer = 'המוצר לא נמצא '
  end
  select @Answer
end

--להביא מוצרים ששייכים רק לנציג שתרם אותם
create procedure GetProductsThatBelongToMe @CampaignID int, @Email nvarchar(255) 
as
begin
    declare @UserID int
    select @UserID=(select UserID from Users where Email=@Email)
	select ProductName,UnitPrice,UnitsInStock,CampaignID from Products 
	where CampaignID = @CampaignID and Products.RepresantativeID = @UserID
end


--פונקציה למחיקת קמפיין וכל המוצרים איתו ממסד נתונים

create procedure deleteCampaignAndItsProducts @CampaignID int
AS
BEGIN
     delete from Products where CampaignID = @CampaignID
	 delete from Campaigns where CampaignsID = @CampaignID
END